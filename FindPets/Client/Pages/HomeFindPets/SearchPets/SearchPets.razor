@page "/searchPets"
@using FindPets.Shared;
@using FindPets.Shared.Enum
@using FindPets.Shared.Pets;

@inject IPetService PetServiceClient;

<PageTitle>Localizar Pet</PageTitle>

<div class="container mt-5">
    <div>
        <EditForm Model="@Searchs">
         
          <div class="row">
            <div class="form-group col-md-3">
              <label for="type">Tipo de Anúncio</label>
                <InputSelect class="form-select" @bind-Value="Searchs.Type">
                    @foreach (var item in Enum.GetValues(typeof(EnumTypeSearch)))
                    {
                        <option value="@item">@item.ToString()</option>
                    }
                    
                </InputSelect>
            </div>
            <div class="form-group col-md-3">
                <label for="status">Status</label>
                <InputSelect class="form-select" id="status" @bind-Value="Searchs.Status">
                    <option value="false" selected>Em Aberto</option>
                    <option value="true">Finalizados</option>
                </InputSelect>
            </div>
            <div class="form-group col-md-3">
              <label for="search">Pesquise</label>
                    <InputText class="form-control mb-1" id="search" @bind-Value="Searchs.Search" placeholder="..." />
            </div>
            <div class="col-md-3 d-flex justify-content-end align-self-end">
                    <button class="btn bt-custom-white" style="height: 40px" @onclick="(() => SubmitSearch(Searchs.Page))">
                    Buscar
                </button>
            </div>
      
                
         </div>
        </EditForm>
       
   
    </div>
    <h4 class="mt-5">Animais</h4>
    <div class="mt-5">
        @if (ListPets.Count() != 0)
        {
            <div class="row">
                @foreach (var pet in ListPets)
                {
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12 mb-3 d-flex justify-content-center align-self-center">
                        <Card Pet="@pet" />
                    </div>
                }
            </div>

            <div class="row mt-5">

                <div class="col-lg-1 col-md-1 col-sm-4 col-4 offset-md-5 offset-sm-0 mb-3 d-flex justify-content-center align-self-center">
                    <button @onclick="(() => SubmitSearch(Searchs.Page - 1))" disabled="@disabledButtonBefore" class="btn bt-custom-blue">
                        <span class="oi oi-chevron-left"></span>
                    </button>
                </div>
                <div class="col-lg-1 col-md-1 col-sm-4 col-4 mb-3 d-flex justify-content-center align-self-center">
                    <button @onclick="(() => SubmitSearch(Searchs.Page + 1))" disabled="@disabledButtonNext" class="col-6 btn bt-custom-blue">
                        <span class="oi oi-chevron-right"></span>
                    </button>
                </div>
            </div>
        } else
        {
            <p class="text-center mt-5">Nenhum registro localizado</p>
        }

    </div>
</div>

@code {


    private SearchPet Searchs = new SearchPet("", EnumTypeSearch.Todos, false, 1, 9);

    private List<Pet> ListPets = new List<Pet>();

    private bool disabledButtonNext = true;
    private bool disabledButtonBefore = true;

    protected override async Task OnInitializedAsync()
    {
        await SubmitSearch();

    }
    
    private async Task SubmitSearch(int? page = 1)
    {

        if (page != null)
            Searchs.Page = (int)page;

        var petsResult = await PetServiceClient.GetAllPets(Searchs);

        ListPets = petsResult.ToList();

        disabledButtonNext = ListPets.Count() < Searchs.Take;
        disabledButtonBefore = Searchs.Page == 1;
    }

}